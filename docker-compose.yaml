version: '3.8'
networks:
  my-network:
services:
  api:
    build:
      context: ./api
    image: api_image
    env_file: .env
    container_name: api_container
    volumes:
      - ./api:/app
    depends_on:
      - db
    ports:
      - "8000:8000"
    networks:
      - my-network

  scraper:
    build:
      context: ./scraper
    image: scraper_image
    container_name: scraper_container
    env_file: .env
    volumes:
      - ./scraper:/app
    ports:
      - "8001:8001"
    networks:
      - my-network

  db:
    env_file: .env
    image: postgres:13-alpine
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - '5432:5432'
    volumes:
      - "/postgres_data:/var/lib/postgresql/data"
    networks:
      - my-network

  bot:
    build:
      context: ./bot
    container_name: bot_container
    env_file: .env
    depends_on:
      - db
      - api
      - scraper
    networks:
      - my-network

  sheets:
    build:
      context: ./google_sheets
    container_name: sheets_container
    env_file: .env
    ports:
      - '8002:8002'
    networks:
      - my-network

  tests:
    env_file: .env
    build:
      context: ./tests
    container_name: test_container
    command: [ "pytest" ]
    depends_on:
      - api
      - scraper
      - db
    networks:
      - my-network


